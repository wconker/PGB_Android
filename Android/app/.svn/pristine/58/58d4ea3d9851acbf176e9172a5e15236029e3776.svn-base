package com.android.pgb.Activity.Activity_XJ;

import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.support.v7.widget.OrientationHelper;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.StaggeredGridLayoutManager;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.android.pgb.Activity.Core.SelectCompanyPeople;
import com.android.pgb.Bean.Group;
import com.android.pgb.Bean.ProvinceBean;
import com.android.pgb.Bean.XJBean;
import com.android.pgb.BroadCast.ExChange;
import com.android.pgb.R;
import com.android.pgb.Utils.JSONUtils;
import com.android.pgb.Utils.Log;
import com.android.pgb.Utils.PhotoPicker.PhotoAdapter;
import com.android.pgb.Utils.PhotoPicker.RecyclerItemClickListener;
import com.android.pgb.Utils.SharedPreferences.SharedPreferencesUtils;
import com.android.pgb.View.CBarView;
import com.bigkoo.pickerview.OptionsPickerView;
import com.bigkoo.pickerview.model.IPickerViewData;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import me.iwf.photopicker.PhotoPicker;
import me.iwf.photopicker.PhotoPreview;


public class CreateXJ extends Activity implements View.OnClickListener, ExChange.CallBackForData {

    private ExChange ex;
    private LinearLayout choose_wylx, choosecity, choosexjfs, chooseyxsj, choosegroup;
    private EditText xjbdw_et, bz_et, dtbj_et, xqrs_et, mj_et;
    private TextView wylx_tv, city_tv, xjfs_tv, yxsj_tv, group_tv;
    private OptionsPickerView optionsPickerView, cityPickerView;
    private ArrayList<ProvinceBean> options1Items = new ArrayList<>();
    private ArrayList<ArrayList<ProvinceBean>> options2Items = new ArrayList<>();
    private ArrayList<ArrayList<ArrayList<IPickerViewData>>> options3Items = new ArrayList<>();
    private ArrayList<String> selectedPhotos = new ArrayList<>();
    private PhotoAdapter photoAdapter;
    private XJBean xjbean;
    private Button btn_submit;
    private View view_line, group_view;
    private int DQDM = 0;
    private int xjfsIndex = 0;
    private JSONArray xjdx;
    private RecyclerView recyclerView;
    private ArrayList<ProvinceBean> options2_;
    private int XJID = 0;
    private int YXSJ = 0;

    private void initControl() {
        optionsPickerView = new OptionsPickerView(this);
        cityPickerView = new OptionsPickerView(this);
        recyclerView = (RecyclerView) findViewById(R.id.recycler_view);
        photoAdapter = new PhotoAdapter(this, selectedPhotos);
        recyclerView.setLayoutManager(new StaggeredGridLayoutManager(4, OrientationHelper.VERTICAL));
        recyclerView.setAdapter(photoAdapter);
        recyclerView.addOnItemTouchListener(new RecyclerItemClickListener(this,
                new RecyclerItemClickListener.OnItemClickListener() {
                    @Override
                    public void onItemClick(View view, int position) {
                        if (photoAdapter.getItemViewType(position) == 1) {
                            PhotoPicker.builder()
                                    .setPhotoCount(9)
                                    .setShowCamera(true)
                                    .setPreviewEnabled(false)
                                    .setSelected(selectedPhotos)
                                    .start(CreateXJ.this);
                        } else {
                            PhotoPreview.builder()
                                    .setPhotos(selectedPhotos)
                                    .setCurrentItem(position)
                                    .start(CreateXJ.this);
                        }
                    }
                }));
        mj_et = (EditText) this.findViewById(R.id.mj_et);
        xjbdw_et = (EditText) this.findViewById(R.id.xjbdw_et);
        bz_et = (EditText) this.findViewById(R.id.bz_et);
        dtbj_et = (EditText) this.findViewById(R.id.dtbj_et);
        xqrs_et = (EditText) this.findViewById(R.id.xqrs_et);
        group_view = this.findViewById(R.id.group_view);
        choose_wylx = (LinearLayout) this.findViewById(R.id.choose_wylx);
        choosexjfs = (LinearLayout) this.findViewById(R.id.choosexjfs);
        choosecity = (LinearLayout) this.findViewById(R.id.choosecity);
        chooseyxsj = (LinearLayout) this.findViewById(R.id.chooseyxsj);
        choosegroup = (LinearLayout) this.findViewById(R.id.choosegroup);
        view_line = this.findViewById(R.id.view_line);
        wylx_tv = (TextView) this.findViewById(R.id.wylx_tv);
        xjfs_tv = (TextView) this.findViewById(R.id.xjfs_tv);
        city_tv = (TextView) this.findViewById(R.id.city_tv);
        xjfs_tv = (TextView) this.findViewById(R.id.xjfs_tv);
        yxsj_tv = (TextView) this.findViewById(R.id.yxsj_tv);
        group_tv = (TextView) this.findViewById(R.id.group_tv);
        choose_wylx.setOnClickListener(this);
        choosecity.setOnClickListener(this);
        choosexjfs.setOnClickListener(this);
        chooseyxsj.setOnClickListener(this);
        choosegroup.setOnClickListener(this);
        btn_submit = (Button) this.findViewById(R.id.btn_submit);
        btn_submit.setOnClickListener(this);


    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_create_xj);
        new CBarView(this, new CBarView.OnClickListener() {
            @Override
            public void onLeftClick() {
                super.onLeftClick();
                finish();
            }
        }, null);
        ex = new ExChange(this);
        //获取城市列表
        ex.getCityList("p", "0");

        XJID = getIntent().getIntExtra("xjId", 0);
        ex.getxjInfo(0, XJID);

        initControl();


    }


    /***
     * 系统参数
     */
    private JSONArray InitSysType(String name) {


        JSONArray J = null;
        try {
            SharedPreferences sp = SharedPreferencesUtils.getSharedPreferences(CreateXJ.this);
            JSONObject jsonObject = (JSONObject) JSONUtils.getJSONArrayFromStr(sp.getString("sysType", "")).get(0);
            J = (JSONArray) jsonObject.get(name);

        } catch (JSONException e) {
            e.printStackTrace();
        }
        return J;
    }

    private ArrayList<ProvinceBean> pickviewdata = new ArrayList<>();

    /***
     * 城市列表
     */
    private void setCityView() {

        //三级联动效果
        cityPickerView.setPicker(options1Items, options2Items, null, true);
        //设置选择的三级单位
        // pwOptions.setLabels("省", "市");
        cityPickerView.setTitle("选择城市");
        cityPickerView.setCyclic(false, true, false);
        //设置默认选中的三级项目
        //监听确定选择按钮
        cityPickerView.setSelectOptions(1, 1, 1);
        cityPickerView.setOnoptionsSelectListener(new OptionsPickerView.OnOptionsSelectListener() {

            @Override
            public void onOptionsSelect(int options1, int option2, int options3) {
                //返回的分别是三个级别的选中位置
                String tx = options1Items.get(options1).getPickerViewText()
                        + options2Items.get(options1).get(option2).getPickerViewText();
                city_tv.setText(options2Items.get(options1).get(option2).getPickerViewText());
                DQDM = (int) options2Items.get(options1).get(option2).getId();

            }
        });

    }

    /***
     * 得到物业类型数据列表
     */
    private void getWylxList() {
        optionsPickerView.setTitle("物业类型");
        JSONArray jarr = InitSysType("wylx");
        pickviewdata.clear();
        for (int j = 0; j < jarr.length(); j++) {
            JSONObject jobject;
            try {
                jobject = (JSONObject) jarr.get(j);
                pickviewdata.add(new ProvinceBean(Long.parseLong(jobject.get("value").toString()), jobject.get("name").toString(), "",
                        ""));
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }


    /***
     * 有效时间物业类型数据列表
     */
    private void getYxsjList() {
        optionsPickerView.setTitle("有效时间");
        JSONArray jarr = InitSysType("yxsj");
        pickviewdata.clear();
        for (int j = 0; j < jarr.length(); j++) {
            JSONObject jobject;
            try {
                jobject = (JSONObject) jarr.get(j);
                pickviewdata.add(new ProvinceBean(Long.parseLong(jobject.get("value").toString()), jobject.get("name").toString(), "", ""));
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }

    /***
     * 得到询价方式数据列表
     */
    private void getXjfsList() {
        optionsPickerView.setTitle("询价方式");
        pickviewdata.clear();
        pickviewdata.add(new ProvinceBean(0, "外部询价", "", ""));
        pickviewdata.add(new ProvinceBean(1, "内部询价", "", ""));
    }


    private void setPickerView(final String keyWord) {
        //三级联动效果
        optionsPickerView.setPicker(pickviewdata, null, null, false);
        optionsPickerView.setCyclic(false, false, false);
        //设置默认选中的三级项目
        //监听确定选择按钮
        optionsPickerView.setSelectOptions(1, 1, 1);

        optionsPickerView.setOnoptionsSelectListener(new OptionsPickerView.OnOptionsSelectListener() {

            @Override
            public void onOptionsSelect(int options1, int option2, int options3) {
                //返回的分别是三个级别的选中位置

                switch (keyWord) {
                    case "choose_wylx":
                        wylx_tv.setText(pickviewdata.get(options1).getName());
                        wylx_tv.setTextColor(Color.BLACK);
                        break;
                    case "choosexjfs":
                        xjfsIndex = (int) pickviewdata.get(options1).getId();
                        if (pickviewdata.get(options1).getId() == 1) {
                            choosegroup.setVisibility(View.VISIBLE);
                            group_view.setVisibility(View.VISIBLE);
                        } else {
                            choosegroup.setVisibility(View.GONE);
                            group_view.setVisibility(View.GONE);
                            group_tv.setText("");
                        }
                        xjfs_tv.setText(pickviewdata.get(options1).getName());
                        xjfs_tv.setTextColor(Color.BLACK);
                        break;
                    case "chooseyxsj":
                        yxsj_tv.setText(pickviewdata.get(options1).getName());
                        yxsj_tv.setTextColor(Color.BLACK);
                        YXSJ = (int) pickviewdata.get(options1).getId();
                        break;
                }

            }
        });

    }

    @Override
    public void onClick(View v) {

        int cid = v.getId();
        switch (cid) {
            case R.id.choose_wylx:
                getWylxList();
                setPickerView("choose_wylx");
                optionsPickerView.show();
                break;
            case R.id.choosecity:
                cityPickerView.show();
                break;
            case R.id.choosexjfs:
                getXjfsList();
                setPickerView("choosexjfs");
                optionsPickerView.show();
                break;
            case R.id.chooseyxsj:
                getYxsjList();
                setPickerView("chooseyxsj");
                optionsPickerView.show();
                break;
            case R.id.choosegroup:
                Intent intent = new Intent(CreateXJ.this, SelectCompanyPeople.class);
                startActivityForResult(intent, 200);
                break;
            case R.id.btn_submit:
                DataCneter();
                break;

        }
    }

    private void setControl() {

        wylx_tv.setText(xjbean.getWylx());
        xjbdw_et.setText(xjbean.getXjbdw());
        dtbj_et.setText(xjbean.getBc() + "");
        bz_et.setText(xjbean.getBz());
        mj_et.setText(xjbean.getMj());
        city_tv.setText(xjbean.getSzscmc());
        DQDM = Integer.parseInt(xjbean.getSzcs());
        xjfsIndex = xjbean.getNbxj();
        yxsj_tv.setText("" + xjbean.getXjyxsj() + "秒");
        xqrs_et.setText("" + xjbean.getYxbjs());
        YXSJ = xjbean.getXjyxsj();
        if (xjbean.getNb_list() != null) {
            String str = "";
            xjdx = new JSONArray();
            choosegroup.setVisibility(View.VISIBLE);
            group_view.setVisibility(View.VISIBLE);
            for (int p = 0; p < xjbean.getNb_list().length(); p++) {
                try {
                    str += ((JSONObject) xjbean.getNb_list().get(p)).get("xm") + "、";
                    group_tv.setText(str);
                    xjdx.put((Integer) ((JSONObject) xjbean.getNb_list().get(p)).get("userid"));
                } catch (JSONException e) {
                    e.printStackTrace();
                }

            }
        }
    }


    // FIXME: 2017/3/22  设置bean准备提交
    private void DataCneter() {

        if (XJID > 0) {
            xjbean.setXjbdw(xjbdw_et.getText().toString());
            xjbean.setBc(Double.parseDouble(dtbj_et.getText().toString()));
            xjbean.setYxbjs(Integer.parseInt(xqrs_et.getText().toString()));
            xjbean.setFwxm(xjfs_tv.getText().toString());
            xjbean.setBz(bz_et.getText().toString());
            xjbean.setWylx(wylx_tv.getText().toString());
            xjbean.setXjdx(xjdx);
            xjbean.setXjyxsj(YXSJ);
            xjbean.setZhlx("充值账户");
            xjbean.setMj(mj_et.getText().toString());
            xjbean.setNbxj(xjfsIndex);
            xjbean.setSzcs(String.valueOf(DQDM));
            ex.addxj(xjbean, "business.UpdateXj");
        } else {


            XJBean xjBean = new XJBean();
            xjBean.setXjbdw(xjbdw_et.getText().toString());
            xjBean.setBc(Double.parseDouble(dtbj_et.getText().toString()));
            xjBean.setYxbjs(Integer.parseInt(xqrs_et.getText().toString()));
            xjBean.setFwxm(xjfs_tv.getText().toString());
            xjBean.setBz(bz_et.getText().toString());
            xjBean.setWylx(wylx_tv.getText().toString());
            xjBean.setXjdx(xjdx);
            xjBean.setXjyxsj(YXSJ);
            xjBean.setZhlx("充值账户");
            xjBean.setMj(mj_et.getText().toString());
            xjBean.setNbxj(xjfsIndex);
            xjBean.setSzcs(String.valueOf(DQDM));
            try {
                ex.addxj(xjBean);
            } catch (Exception e) {
                Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
            }

        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(data==null)
            return;

        if (resultCode == RESULT_OK &&
                (requestCode == PhotoPicker.REQUEST_CODE || requestCode == PhotoPreview.REQUEST_CODE)) {

            List<String> photos = null;
            if (data != null) {
                photos = data.getStringArrayListExtra(PhotoPicker.KEY_SELECTED_PHOTOS);
            }
            selectedPhotos.clear();
            if (photos != null) {
                selectedPhotos.addAll(photos);
            }
            photoAdapter.notifyDataSetChanged();

        }
        if (resultCode == 200) {
            List<Group> g = (List<Group>) data.getBundleExtra("group").getSerializable("value");
            String str = "";
            xjdx = new JSONArray();
            for (int u = 0; u < g.size(); u++) {
                xjdx.put(g.get(u).getUserid());
                str += g.get(u).getXm() + "、";
            }
            group_tv.setText(str);
        }

    }

    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);

            switch (msg.what) {
                case 101:
                    setControl();
                    break;
                case 233:                      //错误提示
                    Toast.makeText(CreateXJ.this, ex.getMessageInfo(_str), Toast.LENGTH_LONG).show();
                    break;
                case 201: //提交询价之后提交图片
                    JSONObject object = JSONUtils.StringToJSON(_str);
                    try {
                        JSONObject data = (JSONObject) object.get("data");
                        for (int c = 0; c < selectedPhotos.size(); c++) {
                            Map<String, String> map = new HashMap<>();
                            map.put("userid", ex.userId.toString());
                            map.put("imgtype", "产权证");
                            map.put("fjbs", data.get("fjbs").toString());
                            map.put("xjid", data.get("xjid").toString());
                            map.put("imgname", String.valueOf(c));
                            Log.e(selectedPhotos.get(c));
                            ex.send(new File(selectedPhotos.get(c)), map);
                        }
                        Toast.makeText(CreateXJ.this, ex.getMessageInfo(_str), Toast.LENGTH_LONG).show();
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    break;

            }

        }
    };


    //打断返回按钮的事件防止误触
    @Override
    public void onBackPressed() {

       return;
    }

    private String _str = "";


    @Override
    public void onMessage(String str, String cmd, int code) {
        JSONObject obj;
        Message message = Message.obtain();
        _str=str;
        if(code!=0)
        {   _str=str;
            message.what = 233;
            handler.sendMessage(message);
        }

        if (cmd.equals("business.addxj")) {
            _str=str;
            message.what = 201;
            handler.sendMessage(message);


        }
        if (cmd.equals("business.getxjInfo")) {
            Log.e(str);
            obj = JSONUtils.StringToJSON(str);
            try {
                JSONObject xjObj = JSONUtils.getJSONArray(obj, "data").getJSONObject(0);
                xjbean = new XJBean(xjObj);
                if (XJID > 0) {
                    message.what = 101;
                    handler.sendMessage(message);
                }

            } catch (JSONException e) {
                e.printStackTrace();
            }

        }

        if (cmd.equals("business.UpdateXj")) {

            Looper.prepare();
            Toast.makeText(this, ex.getMessageInfo(str), Toast.LENGTH_LONG).show();
            Looper.loop();

        }

        if (cmd.equals("conn.getCityList")) {
            try {
                obj = new JSONObject(str);
                JSONArray arr = JSONUtils.getJSONArray(obj, "data");
                if (((JSONObject) arr.get(0)).get("fl").equals("P")) {
                    for (int i = 0; i < arr.length(); i++) {
                        JSONObject jsonObj = (JSONObject) arr.get(i);
                        options1Items.add(new ProvinceBean(Long.parseLong(jsonObj.get("dqdm").toString()),
                                jsonObj.get("dqmc").toString(),
                                jsonObj.get("fl").toString(), ""));
                        JSONArray cityarr = JSONUtils.getJSONArray(jsonObj, "City");
                        if (cityarr.length() > 0) {
                            options2_ = new ArrayList<>();
                            for (int c = 0; c < cityarr.length(); c++) {
                                JSONObject cityObj = (JSONObject) cityarr.get(c);
                                options2_.add(new ProvinceBean(Long.parseLong(cityObj.get("dqdm").toString()),
                                        cityObj.get("dqmc").toString(),
                                        "", ""));
                            }
                            options2Items.add(options2_);
                        }
                    }
                    setCityView();
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }
}
